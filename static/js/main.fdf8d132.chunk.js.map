{"version":3,"sources":["Filter/Filter.module.css","redux/actions.js","ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","ContactForm/ContactForm.module.css","ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","dispatch","useDispatch","contacts","useSelector","state","useState","setName","setNumber","inputChange","e","currentTarget","value","className","styles","form","onSubmit","preventDefault","map","contact","includes","alert","label","input","type","pattern","title","required","onChange","button","Filter","ContactList","filter","toLowerCase","contactList","length","listItem","onClick","connect","createReducer","action","_","combineReducers","persistConfig","key","storage","rootReducer","reducer","persistedReducer","persistReducer","store","configureStore","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fdf8d132.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__wsVd2\",\"input\":\"Filter_input__3ONXq\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\"\r\n\r\nexport const addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number\r\n    },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addContact } from '../redux/actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.contacts);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('')\r\n\r\n\r\n  const inputChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  };\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (contacts.map(contact => contact.name).includes(name)) {\r\n      alert(`You already have ${name} in contacs.`)\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <label className={styles.label}><span className={styles.name}>Name</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={inputChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label}><span>Number</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={inputChange}\r\n\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )\r\n}\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;","import { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../redux/actions'; \r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(changeFilter(e.currentTarget.value));\r\n  \r\n  return (\r\n    <label className={styles.label}>\r\n      <span>Let's find somebody</span>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const filter = useSelector(state => state.contacts.filter).toLowerCase();\r\n    const contacts = useSelector(state => state.contacts.contacts);\r\n    // console.log(contacts)\r\n\r\n    const dispatch = useDispatch()\r\n    const visibleContacts = () => contacts.filter(contact => contact.name.toLowerCase().includes(filter));\r\n\r\n    const contactList = useSelector(visibleContacts);\r\n\r\n    if (contactList.length > 0) {\r\n        return (\r\n            <div>\r\n                <ul className={styles.contactList}>\r\n                    {contactList.map(contact => (\r\n                        <li\r\n                            className={styles.listItem}\r\n                            key={contact.id}>\r\n                            <span className={styles.name}>{contact.name}:</span>\r\n                            <span className={styles.number}>{contact.number}</span>\r\n                            <button\r\n                                className={styles.button}\r\n                                onClick={() => dispatch(deleteContact(contact.id))}>х</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <p>No contacts yet.</p>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nContactList.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\n// import shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\n// const defaultContacts =\n//   [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n//   ]\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default connect()(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./actions\";\r\n\r\n\r\nexport const initialContacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(initialContacts, {\r\n    [addContact]: (state, action) => [action.payload, ...state],\r\n    [deleteContact]: (state, action) => state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload,\r\n});\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n});","import reducer from './reducer'\r\nimport { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from 'redux-persist/es/constants';\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n}\r\n\r\nconst rootReducer = combineReducers({ contacts: reducer });\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer );\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions:[FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }\r\n    })\r\n})\r\nconst persistor = persistStore(store);\r\n\r\nexport {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store, persistor } from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading='loading' persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__TuWCu\",\"input\":\"ContactForm_input__JRIS2\",\"button\":\"ContactForm_button__3cUSr\",\"label\":\"ContactForm_label__2z3f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1_bFK\",\"listItem\":\"ContactList_listItem__Cu-An\",\"button\":\"ContactList_button__3Fr_P\",\"number\":\"ContactList_number__3Jxlw\",\"name\":\"ContactList_name__1h3x_\"};"],"sourceRoot":""}